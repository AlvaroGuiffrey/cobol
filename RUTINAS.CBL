       COPY "VENTURNO.SEL".
       COPY "LACAJA.SEL".
       COPY "TARJ.SEL".

       DATA DIVISION.
       FILE SECTION.
       COPY "VENTURNO.REG".
       COPY "LACAJA.REG".
       COPY "TARJ.REG".
       WORKING-STORAGE SECTION.
       PROCEDURE DIVISION.
       DECLARATIVES.
       COPY "VENTURNO.ERR".
       COPY "LACAJA.ERR".
       COPY "TARJ.ERR".
       END DECLARATIVES.
       PROGRAMA SECTION.
       ABRO.
	    MOVE "LPT1" TO PEPE
		CLOSE IMP02

	    MOVE SPACES TO SUB-T-C-COMPRO.
	    IF INSCRIPTO = "R" OR INSCRIPTO = "r"
		  MOVE "A" TO SUB-T-C-COMPRO SUB-T-C-CAP
		  MOVE "LPT1" TO PEPE
		  OPEN OUTPUT IMP02.

	    IF INSCRIPTO = "N" OR INSCRIPTO = "n"
		  MOVE "A" TO SUB-T-C-COMPRO SUB-T-C-CAP
		  MOVE "LPT1" TO PEPE
		  OPEN OUTPUT IMP02.

	    IF INSCRIPTO = "C" OR INSCRIPTO = "c"
		  MOVE "B" TO SUB-T-C-COMPRO SUB-T-C-CAP
		  MOVE "LPT2" TO PEPE
		  OPEN OUTPUT IMP02.

	    IF INSCRIPTO = "E" OR INSCRIPTO = "e"
		  MOVE "B" TO SUB-T-C-COMPRO SUB-T-C-CAP
		  MOVE "LPT2" TO PEPE
		  OPEN OUTPUT IMP02.

      *............CLIENTES CONTADO...................
	    IF NUM-CONDI < 31    
		MOVE 5001 TO RUBRO-CTA RUBRO-INT.
      *............CLIENTES A RETIRAR..................
	    IF NUM-CONDI > 30 AND NUM-CONDI < 50
		MOVE 5001 TO RUBRO-CTA RUBRO-INT.
      *...........BIENES DE USO......................
	    IF NUM-CONDI = 50 
		MOVE 5001 TO RUBRO-CTA RUBRO-INT.
      *...........CLIENTES CUENTAS CTES................
	    IF NUM-CONDI > 50 MOVE 5001 TO RUBRO-CTA RUBRO-INT.
      *...........REMITOS INTERNOS.....................
	    IF NUM-CONDI > 89 MOVE 3 TO RUBRO-CTA RUBRO-INT.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=--=-=- 

      *     SENA

	    IF NUM-CONDI > 50
	       IF CONDICION  NOT = 51 
		   DISPLAY "NO HABILITADO" LINE 25 POSITION 1 SIZE 79
		   ACCEPT QQ LINE 25 POSITION 60
		   GO TO CAP-CTA.

	     
      *-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-
      * CORTA CANTIDAD DE RENGLONES
      *-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-
      * PARA VIOLLAZ
      *-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	    IF Y = 7
	      IF RENG-CAP > 40 GO TO CIERRE-FACTU.
	    IF Y NOT = 7 
      *=-=-=-=-=-=-=PARA SOTELO-=-=-=-=-=-=-=-
      *      IF Y = 2 OR Y = 5 OR Y = 4
      *        IF SUB-T-C-CAP = "A"
      *           IF RENG-CAP > 27 GO TO CIERRE-FACTU.
      *      IF Y = 2 OR Y = 5 OR Y = 4
      *         IF SUB-T-C-CAP = "B"
      *           IF RENG-CAP > 10 GO TO CIERRE-FACTU.
      *     IF Y = 1 OR Y = 7 OR Y = 8 OR Y = 9
      *         IF RENG-CAP > 20 GO TO CIERRE-FACTU.
      *=-=-=-=-=-= PARA TODOS =-=-=-=-=-==-==-=-==
	       IF RENG-CAP > 20 GO TO CIERRE-FACTU.
      *=-=-=-=-=-=--=-=-=-=-=-=-=-=-==-=-=-=-==--=-=
       CAP-PRE-C.
      *=-=-=--=--=-=-=-=== CAPTURA PRECIO COMBUSTIBLE =-=-=-=-=-==
      *=-=-=--=-=-=-=-= Y CALCULA CANTIDAD =-=-=-=-=-=-=-=-=-=-=-=
	   MOVE 14 TO SW3.
	   PERFORM BORRA.
	   PERFORM CARGO-IMP-C.
	   PERFORM DESP-IMP.
	   COMPUTE UNI-CAP ROUNDED = IMP-CAP / (FIN-CAP / 10).
	   MOVE UNI-CAP TO UNI-STOCK.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-==-=-=-=-=
       SIGA-CONDI.
	SIGA-FRA.
	   IF LIN-1-ART01 > 900 
		  COMPUTE IMP-CAP ROUNDED  = (PRE-CAP / 10) * UNI-CAP
		  COMPUTE II-CAP ROUNDED = (II-CAP / 10) * UNI-CAP
	    ELSE  COMPUTE IMP-CAP ROUNDED  = PRE-CAP * UNI-CAP
		  COMPUTE II-CAP ROUNDED = II-CAP * UNI-CAP.

      * -=-=- INVALIDA REMITO PARA VENTA A RETIRAR -=-=-=-
	   IF NUM-CONDI > 30 AND NUM-CONDI < 50
		  GO TO NO-F10.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-==
	   MOVE "CONFIRMA : <F1>" TO MEN-1.
      *-=-=-=-=-= sin remito =-=-=-=-=-=-=-=-=-=-=-
	   MOVE SPACES TO MEN-2 MEN-3.
      *=-=-=-=-=-= CON REMITO =-=-=-=-=-=-=-=-=-=-=-=-=-
      *     IF Y = 2 OR Y = 8
      *         MOVE "ENTREG. y <F10>" TO MEN-2
      *         MOVE "C/REMITO       " TO MEN-3.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
      *=-=-=-=- INVALIDA REMITO PARA VENTA A RETIRAR =-=-=-=
	   IF NUM-CONDI > 30 AND NUM-CONDI < 50
		    MOVE 0 TO REP-CAP.
      *=--=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-==-=-=-=-=-
       CIERRE-FACTU.
      *-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=
      * PARA VIOLLAZ
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	   IF Y = 7
	     IF RENG-CAP < 40
	       MOVE 0 TO RENG-CAP MON-COTIZA
	       MOVE 15 TO SW3
	       GO TO CAP-TOT.
	   IF Y NOT = 7
      *=-=-=PARA TODOS=-=-=-=-=-=-=-=-=-=-=-=
	   IF RENG-CAP < 20
	      MOVE 0 TO RENG-CAP MON-COTIZA
	      MOVE 15 TO SW3
	      GO TO CAP-TOT.
      **=-=-=- PARA SOTELO =-=-=-=-=-=-=-=-=-=-=-=
      *     IF Y = 2 OR Y = 4 OR Y = 5
      *       IF SUB-T-C-CAP = "A"
      *         IF RENG-CAP < 27
      *           MOVE 0 TO RENG-CAP MON-COTIZA
      *           MOVE 15 TO SW3
      *           GO TO CAP-TOT.
      *     IF Y = 2 OR Y = 4 OR Y = 5
      *       IF SUB-T-C-CAP = "B"
      *         IF RENG-CAP < 10
      *           MOVE 0 TO RENG-CAP MON-COTIZA
      *           MOVE 15 TO SW3
      *           GO TO CAP-TOT.
      **=-=-=-=-=-=-=-=-=-=-=========-=-=-=-=-=-=
       SIGO-T.
	   PERFORM DESP-TOT.    
      *--------------COLOCA CANTIDAD A LISTAR -------------
      *-=-=-=-=- PARA VIOLLAZ - TANO - GRANTON -  BACCI-=-=-=-=
	   IF Y = 2 OR Y = 7 OR Y = 9 OR Y = 4 OR Y = 5 OR Y = 1
      *-=-=-=-=-= PARA BICHO -=-=-=-==-==-=-=-=-===-=-=-=-=-=-=-=
      *     IF Y = 2 OR Y = 7 OR Y = 9 OR Y = 4 OR Y = 5     
		 MOVE 1 TO CAP-LIS1
		 ELSE MOVE 1 TO CAP-LIS1.
      *=-=-=-=-=- PARA SOTELO -=-=-=-=-=-=-==-=-=-=-=-=-=-=
      *     IF Y = 2 OR Y = 4 OR Y = 5
      *         IF SUB-T-C-CAP = "A" MOVE 1 TO CAP-LIS1
      *         ELSE MOVE 2 TO CAP-LIS1.
      *     IF Y = 7 OR Y = 9 OR Y = 1
      *         MOVE 2 TO CAP-LIS1.
      *-=-=-=-= INVALID INGRESO DE CANT.A LISTAR =-=-=-=-=-=
	   GO TO COTI.
	   


	   MOVE 0 TO LAC-IMP-CHEQ LAC-TARJ-UTI
	   IF NUM-CONDI NOT < 30 GO TO NO-CONTADO.
       DECIDE-PAGO.
	   MOVE 0 TO LAC-IMP-CHEQ LAC-TARJ-UTI
	   DISPLAY 
	   "PAGA CON : -E- EFECTIVO; -C- CHEQUE; -T- TARJETA; -O- OTRO" 
	       LINE 25 POSITION 2 SIZE 77
	   ACCEPT TIPO-PAGO LINE 25 POSITION 70
	   IF TIPO-PAGO NOT = "E" AND
	      TIPO-PAGO NOT = "C" AND
	      TIPO-PAGO NOT = "T" AND
	      TIPO-PAGO NOT = "O" GO TO DECIDE-PAGO.
	   IF TIPO-PAGO = "E" GO TO NO-CONTADO.
	   IF TIPO-PAGO = "C"
	      DISPLAY "Digite Importe cheque..:" LINE 25 POSITION 2
			   SIZE 75
	      ACCEPT LAC-IMP-CHEQ LINE 25 POSITION 40 NO BEEP TAB
		  CONVERT
	      GO TO NO-CONTADO.
       CAP-TARJETA.
	   OPEN INPUT TARJ
	   IF TIPO-PAGO = "T"
	      DISPLAY "Digite Tarjeta utilizada..:" LINE 25 POSITION 2
			   SIZE 75
	      ACCEPT LAC-TARJ-UTI LINE 25 POSITION 40 NO BEEP TAB
		  CONVERT.
	   MOVE LAC-TARJ-UTI TO TAR-NUM
	   READ TARJ INVALID KEY CLOSE TARJ GO TO CAP-TARJETA.
	   DISPLAY TAR-NOM LINE 25 POSITION 44.
	   CLOSE TARJ.


       NO-CONTADO.

      *  AGREGADO POR TEMA CAJA ---------------------------------
     
	   MOVE NUM-EMP      TO LAC-EMP
	   MOVE SUC-EMP      TO LAC-SUC
	   MOVE VV           TO LAC-TURNO
	   MOVE CONDI-A      TO LAC-CONDI
	   MOVE MOV-CAP      TO LAC-COMPROB
	   MOVE RUBRO-CTA    TO LAC-RUBRO
	   MOVE CUENTA       TO LAC-CUENTA
	   MOVE SUB-CUENTA   TO LAC-SUB-CTA
	   MOVE TOT-CAP      TO LAC-IMPORTE
	   MOVE TIPO-PAGO    TO LAC-TIPO
	   MOVE AA-CAP       TO LAC-ANO
	   MOVE MM-CAP       TO LAC-MES
	   MOVE DD-CAP       TO LAC-DIA
	   IF Y = 4 GO TO SIN-CAJA.
	   OPEN I-O LACAJA
	   WRITE REG-LACAJA INVALID KEY DISPLAY " ".
	   CLOSE LACAJA.

       SIN-CAJA.
      *  FIN AGREGADO POR TEMA CAJA ---------------------------------



	   MOVE 0 TO RENG-CAP V.
	   CLOSE ART02.
	   OPEN I-O VENTURNO ART02.
	   MOVE 1 TO V.
	   PERFORM GRAVO-RENG THRU GRAVO-RENG-F.
	   PERFORM GRAVO-RENG0.
	   CLOSE VENTURNO ART02.
	   
	   
	   IF IMP-REP > 0 
	       MOVE 1 TO CAP-LIS1 CONT-S
	       PERFORM AVI-REMI
	       PERFORM REPA THRU REPA-F
	       IF Y = 2 OR Y = 8
		 PERFORM IMPRE-REMI THRU IMPRE-REMI-F CAP-LIS1 TIMES
		 ELSE PERFORM IMPRE-FACTU THRU IMPRE-FACTU-F 1 TIMES.
	    
	    
	    
	    PERFORM ESPA 9 TIMES.

      *            IF CONTROLO = "S" PERFORM ESPA 20 TIMES.
      *        CLOSE IMP02.    

       
       AVI-REMI.
      *=-=-=-=-= PARA BICHO =-=-=-=-=-=-=-=-=-=-=-=-=
	  IF Y = 2 OR Y = 8
	     MOVE SPACES TO MEN-1 MEN-2 MEN-3
	     PERFORM MENS-PAN.
      *=-=-=-= AVISA PARA REMITO DISCONTINUO =-=-=-=-=-=-==-=
      *=-=-=-=-=- PARA TANO =-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      *       MOVE SPACES TO MEN-1 MEN-2 MEN-3
      *       PERFORM MENS-PAN
      *       DISPLAY " CARGUE REMITO Y DIGITE ENTER " LINE 25
      *            POSITION 2 BLINK REVERSE
      *       ACCEPT SW2 LINE 25 POSITION 1 SIZE 1
      *       PERFORM MENS-PAN.
      *=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
       REPA.
	   MOVE SUB-T-C-OPE TO COM-2-REP.
	   MOVE SUC-C-OPE TO COM-3-REP.
	   MOVE MOV-CAP TO COM-4-REP.
	   MOVE 0 TO CONT-F.
      *=-=-=-=-=- PARA REMITO PEGADO A FACTURA - BICHO =-=-=-=-=-=-
      *     IF Y = 2 OR Y = 8 GO TO REPA-F.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	   MOVE 9 TO Y.
	   MOVE Y TO NUM-COMP.
	   MOVE SUC-EMP TO SUC-C-COMPRO.
	   MOVE SPACES TO SUB-T-C-COMPRO.
      *=-=-=-=-=-=- EMPRESA SIN SUCURSAL -=-=-=-=-=-=-=-=-
      *     MOVE 0 TO SUC-C-COMPRO.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	   OPEN I-O COMPRO.
	   READ COMPRO WITH NO LOCK.
	   ADD 1 TO NUM-COMPRO.
	   MOVE NUM-COMPRO TO MOV-CAP.
	   REWRITE REG-COMPRO INVALID KEY WRITE REG-COMPRO.
	   CLOSE COMPRO.
	   MOVE "REMITO p/REP" TO T-FAC-ED.
       REPA-F.
	   EXIT.
       ARMA-RENG.
	   IF INSCRIPTO = "C" OR INSCRIPTO = "E"
	     COMPUTE SALDO-COM = SALDO-COM + IMP-CAP.
	   IF INSCRIPTO = "R" OR INSCRIPTO = "N"
	     COMPUTE SALDO-COM = SALDO-COM + ( IMP-CAP *
		 IVA-1-CAP / 100 ) + IMP-CAP.

	   IF LIN-1-ART01 NOT > 900
	   IF INSCRIPTO = "N" 
	     COMPUTE SALDO-COM = SALDO-COM + ( IMP-CAP *
		 IVA-2-CAP / 100 ).
	   IF Y NOT = 4             
	    IF NUM-CONDI > 50 AND NUM-CONDI < 90
	      IF SALDO-COM > SALDO-TOP GO TO EXCESO1.
       ARMA-RENG0.
	   MOVE RENG-CAP TO V.
	   MOVE COD-ART02 TO ART-VEC(V).
	   MOVE UNI-CAP TO UNI-VEC(V).
	   MOVE UNI-STOCK TO UNI-S-VEC(V).
	   MOVE UNI-V-ART02 TO UNI-V-VEC(V).
	   MOVE CANT1-ENVA TO CANT1-VEC(V).
	   MOVE FRA-CAP TO FRA-VEC(V).
	   MOVE LIN-1-ART01 TO LIN-1-VEC(V).
	   MOVE COSTO-STOCK-ART01 TO COS-VEC(V).
	   IF INSCRIPTO = "R" OR INSCRIPTO = "N"
	     MOVE PRE-CAP TO PRE-VEC(V)
	     MOVE IMP-CAP TO IMP-VEC(V).
	   IF INSCRIPTO = "C" OR INSCRIPTO = "E"
	     MOVE PRE-CAP TO PRE-VEC(V)
	     MOVE IMP-CAP TO IMP-VEC(V).
	   MOVE II-CAP TO II-VEC(V).
	   MOVE DET-NUM TO N-ART-VEC(V).
	   MOVE COM-CAP TO DET-VEC(V).
	   MOVE NOM-ENVA TO ENV-VEC(V).
	   MOVE REP-CAP TO REP-VEC(V).
	   IF IMP-IVA-ART01 NOT = 999
	      MOVE IVA-1-CAP TO ALI-VEC(V)
	      ELSE MOVE 0 TO ALI-VEC(V).
	   IF IMP-PRO-ART01 = 0 MOVE ACT-PRO-PRI TO ACT-PRO-VEC(V)
	       ELSE MOVE IMP-PRO-ART01 TO ACT-PRO-VEC(V).
	   IF IMP-MUN-ART01 = 0 MOVE ACT-MUN-PRI TO ACT-MUN-VEC(V)
	       ELSE MOVE IMP-MUN-ART01 TO ACT-MUN-VEC(V).
	   IF REP-CAP = 8 ADD 1 TO IMP-REP.
	   IF REP-CAP = 9 ADD 1 TO IMP-REP.
       
       GRAVO-RENG.
	   IF UNI-VEC(V) = 0 GO TO GRAVO-RENG-F.
	   MOVE NUM-EMP TO EMP-OPE EMP-ART02 EMP-VT.
	   MOVE SUC-EMP TO SUC-OPE SUC-ART02 SUC-VT.
	   MOVE NUM-CONDI TO CON-VT.
	   IF Y = 4 MOVE 2 TO TIP-OPE
	     ELSE MOVE 1 TO TIP-OPE.

	   MOVE VV TO TUR-VT
	   MOVE 0 TO MAR-VT

	   IF Y = 1 MOVE 0 TO TIP-OPE.
	   MOVE Y        TO T-COM-OPE.
	   MOVE NOMBRE-C TO DET-OPE.
	   MOVE IGAN     TO CUIT-OPE.
	   MOVE INSCRIPTO TO RESP-OPE.
	   MOVE MOV-CAP   TO COM-OPE.
	   MOVE SUB-T-C-CAP TO SUB-T-C-OPE.
	   MOVE SUC-C-CAP   TO SUC-C-OPE.
	   MOVE ALI-ALI     TO ALI-OPE.
	   MOVE AA-CAP      TO AA-OPE AA-IMP AA-VT.
	   MOVE MM-CAP      TO MM-OPE MM-IMP MM-VT.
	   MOVE DD-CAP      TO DD-OPE DD-VT.
	   MOVE V           TO REN-OPE.
	   MOVE CUENTA      TO CTA-OPE.
	   MOVE SUB-CUENTA  TO SUB-CTA-OPE.
	   MOVE ART-VEC(V)  TO ART-OPE COD-ART02 ART-VT.
	   MOVE UNI-VEC(V)  TO UNI-OPE.
	   IF ALI-VEC(V) = 0
	      MOVE PRE-VEC(V)     TO D-R-OPE
	     ELSE MOVE PRE-VEC(V) TO PRE-OPE.
	   MOVE IMP-VEC(V)        TO IMP-OPE .
	   IF ALI-VEC(V) = 0 MOVE 0 TO IMP-IMPU-OPE(1) IMP-IMPU-OPE(2).
	   MOVE II-VEC(V)         TO IMP-IMPU-OPE(3).
	   MOVE VEN-CAP           TO VEN-OPE.
	   IF ART-VEC(V) NOT = 0
		MOVE DET-VEC(V)   TO DET-OPE
		ELSE MOVE N-ART-VEC(V) TO DET-OPE.
	   MOVE 0 TO IND-OPE.
      *=-=-=-=  GRABA OPERACIONES -=-=-=-=-=-=-=-==-=-=-=-=-=
	   
	   READ VENTURNO INVALID KEY MOVE 0 TO UNI-VT UNI-FINAL
					       IMP-VT.
	   COMPUTE UNI-VT = UNI-VT + UNI-VEC(V).
	   COMPUTE IMP-VT = IMP-VT + IMP-VEC(V).
	   WRITE REG-VENTURNO INVALID KEY REWRITE REG-VENTURNO.
	 
      *     IF Y = 2 OR Y = 7 OR Y = 4 OR Y = 5
      *        WRITE REG-OPERA INVALID KEY CLOSE OPERA GO TO CAP-NUME.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=
	   IF IMP-VEC(V) NOT = 0
	       ADD 1 TO CANT-ART.
      *=-=-=-=-=-= GRABA IMPUESTOS =-=-=-=-=-=-=-=-=-=-=-=-=-=-==
	   OPEN INPUT ACTI.
	   MOVE ACT-PRO-VEC(V) TO ACT-ACT.
	   MOVE 2 TO IMP-ACT.
	   IF ACT-PRO-PRI NOT = ACT-PRO-VEC(V)
	       READ ACTI INVALID KEY MOVE 0 TO POR-ACT CAL-ACT VAL-1-ACT
			       VAL-2-ACT.
	   CLOSE ACTI.
	   IF ACT-PRO-PRI = ACT-PRO-VEC(V)
	      MOVE POR-ACT-PRO TO POR-ACT
	      MOVE CAL-ACT-PRO TO CAL-ACT
	      MOVE VAL-1-ACT-PRO TO VAL-1-ACT
	      MOVE VAL-2-ACT-PRO TO VAL-2-ACT.
	   MOVE NUM-EMP TO EMP-IMP.
	   MOVE SUC-EMP TO SUC-IMP.
	   MOVE 2 TO IMP-IMP.
	   MOVE ACT-PRO-VEC(V) TO ACT-IMP.
	   OPEN INPUT IMPU.
	   READ IMPU INVALID KEY MOVE 0 TO NET-IMP.
	   CLOSE IMPU. 
	   IF CAL-ACT = 0 OR CAL-ACT = 1
	      COMPUTE  NET-IMP = NET-IMP + IMP-VEC(V)
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE POR-ACT TO POR-IMP.
	   IF CAL-ACT = 0 
	      MOVE VAL-2-ACT TO MIN-IMP
	      ELSE MOVE 0 TO MIN-IMP.
	   IF CAL-ACT = 2
	      MOVE VAL-1-ACT TO NET-IMP
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE 0 TO POR-IMP MIN-IMP.
	   IF CAL-ACT = 3 
	      IF IMP-VEC(V) > VAL-2-ACT
		COMPUTE NET-IMP = NET-IMP + VAL-1-ACT
		MOVE CAL-ACT TO CAL-IMP
		MOVE 0 TO POR-IMP
		MOVE VAL-2-ACT TO MIN-IMP.
	   IF CAL-ACT = 4
	      COMPUTE NET-IMP = NET-IMP + VAL-1-ACT
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE 0 TO POR-IMP MIN-IMP.
	   OPEN I-O IMPU.
	   REWRITE REG-IMPU INVALID KEY WRITE REG-IMPU.
	   CLOSE IMPU.
	   OPEN INPUT ACTI.
	   MOVE ACT-MUN-VEC(V) TO ACT-ACT.
	   MOVE 3 TO IMP-ACT.
	   IF ACT-MUN-PRI NOT = ACT-MUN-VEC(V)
	       READ ACTI INVALID KEY MOVE 0 TO POR-ACT CAL-ACT VAL-1-ACT
			       VAL-2-ACT.
	   CLOSE ACTI.
	   IF ACT-MUN-PRI = ACT-MUN-VEC(V)
	      MOVE POR-ACT-MUN TO POR-ACT
	      MOVE CAL-ACT-MUN TO CAL-ACT
	      MOVE VAL-1-ACT-MUN TO VAL-1-ACT
	      MOVE VAL-2-ACT-MUN TO VAL-2-ACT.
	   MOVE NUM-EMP TO EMP-IMP.
	   MOVE SUC-EMP TO SUC-IMP.
	   MOVE 3 TO IMP-IMP.
	   MOVE ACT-MUN-VEC(V) TO ACT-IMP.
	   OPEN INPUT IMPU.
	   READ IMPU INVALID KEY MOVE 0 TO NET-IMP.
	   CLOSE IMPU. 
	   IF CAL-ACT = 0 OR CAL-ACT = 1
	      COMPUTE  NET-IMP = NET-IMP + IMP-VEC(V)
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE POR-ACT TO POR-IMP.
	   IF CAL-ACT = 0 
	      MOVE VAL-2-ACT TO MIN-IMP
	      ELSE MOVE 0 TO MIN-IMP.
	   IF CAL-ACT = 2
	      MOVE VAL-1-ACT TO NET-IMP
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE 0 TO POR-IMP MIN-IMP.
	   IF CAL-ACT = 3 
	      IF IMP-VEC(V) > VAL-2-ACT
		COMPUTE NET-IMP = NET-IMP + VAL-1-ACT
		MOVE CAL-ACT TO CAL-IMP
		MOVE 0 TO POR-IMP
		MOVE VAL-2-ACT TO MIN-IMP.
	   IF CAL-ACT = 4
	      COMPUTE NET-IMP = NET-IMP + VAL-1-ACT
	      MOVE CAL-ACT TO CAL-IMP
	      MOVE 0 TO POR-IMP MIN-IMP.
	   OPEN I-O IMPU.
	   REWRITE REG-IMPU INVALID KEY WRITE REG-IMPU.
	   CLOSE IMPU.   
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	   READ ART02 INVALID KEY ADD 1 TO V
			 GO TO GRAVO-RENG.
	   IF Y = 7
	     IF NUM-CONDI = 90
	      COMPUTE SAL-S-ART02 ROUNDED = SAL-S-ART02 - UNI-S-VEC(V).
	   IF Y = 2
	     IF NUM-CONDI < 31  
	      COMPUTE SAL-S-ART02  ROUNDED = SAL-S-ART02 - UNI-S-VEC(V).
	   IF Y = 2 
	     IF NUM-CONDI > 49
	      COMPUTE SAL-S-ART02 ROUNDED = SAL-S-ART02 - UNI-S-VEC(V).
	   IF Y = 2
	     IF NUM-CONDI > 30 AND NUM-CONDI < 50
		COMPUTE ENT-S-ART02 ROUNDED = ENT-S-ART02 -
				   UNI-S-VEC(V).
	   IF Y = 8
	     COMPUTE SAL-S-ART02 ROUNDED = SAL-S-ART02 - UNI-S-VEC(V).
	   IF Y = 4
	     COMPUTE SAL-S-ART02 ROUNDED = SAL-S-ART02 + UNI-S-VEC(V).
      *=-=-=-=-=--=-= NOTA DE DEBITO NO TOCA EL STOCK =-=-=-=-=-=-=-=
      *=-=-=-=-=-=-=-= NO TOCA LA ESTADISTICA =-=-=-=-=-=-=-=-=-=-=
	   IF Y = 2 OR Y = 8 
	    COMPUTE COS-V-ART02 ROUNDED = (( COS-V-ART02 * UNI-V-ART02 )
	       + ( COS-VEC(V) * UNI-S-VEC(V) )) / ( UNI-V-ART02 +
		UNI-S-VEC(V) ).
	   IF Y = 4
	    COMPUTE COS-V-ART02 ROUNDED = (( COS-V-ART02 * UNI-V-ART02 )
	       - ( COS-VEC(V) * UNI-S-VEC(V) )) / ( UNI-V-ART02 -
		UNI-S-VEC(V) ).
	   MOVE PRE-VEC(V) TO PRE-BOL.
	   IF Y = 2 OR Y = 4 OR Y = 5
	     IF INSCRIPTO = "E" OR INSCRIPTO = "C"
	      IF ALI-VEC(V) NOT = 0
	       COMPUTE PRE-BOL ROUNDED = PRE-VEC(V) / (( ALI-VEC(V) /
		     100 ) + 1 )
	       ELSE COMPUTE PRE-BOL ROUNDED = PRE-VEC(V) * 1.
	   IF FRA-VEC(V) = "S"
	       COMPUTE PRE-BOL ROUNDED = PRE-BOL * CANT1-VEC(V).
	   IF Y = 2 OR Y = 8 
	    COMPUTE VAL-V-ART02 ROUNDED = (( VAL-V-ART02 * UNI-V-ART02 )
		+ ( PRE-BOL * UNI-S-VEC(V) )) / ( UNI-V-ART02 + 
		UNI-S-VEC(V) ).
	   IF Y = 4
	    COMPUTE VAL-V-ART02 ROUNDED = (( VAL-V-ART02 * UNI-V-ART02 )
		- ( PRE-BOL * UNI-S-VEC(V) )) / ( UNI-V-ART02 -
		UNI-S-VEC(V) ).
	   IF Y = 2 OR Y = 8
	     COMPUTE UNI-V-ART02 ROUNDED = UNI-V-ART02 + UNI-S-VEC(V).
	   IF Y = 4
	     COMPUTE UNI-V-ART02 ROUNDED = UNI-V-ART02 - UNI-S-VEC(V).
	   REWRITE REG-ART02 INVALID KEY MOVE 0 TO SAL-S-ART02.
      *=-=-=-=-=-= REMITOS P/OTRAS SUCURSALES=-=-=-=-=-=-=-
      *     IF Y = 7 AND NUM-CONDI > 89
      *        PERFORM OTRA-SUC.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	   ADD 1 TO V.
	   GO TO GRAVO-RENG.
       GRAVO-RENG-F.
	   EXIT.
       OTRA-SUC.
	   MOVE CUENTA TO SUC-ART02
	   READ ART02 INVALID KEY 
	      MOVE 0 TO SAL-S-ART02 UNI-V-ART02 COS-V-ART02 VAL-V-ART02
			ENT-S-ART02.
	   IF Y NOT = 4
	     COMPUTE SAL-S-ART02 = SAL-S-ART02 + UNI-S-VEC(V)
	     ELSE COMPUTE SAL-S-ART02 = SAL-S-ART02 - UNI-S-VEC(V).
	   REWRITE REG-ART02 INVALID KEY WRITE REG-ART02.
	   MOVE SUC-EMP TO SUC-ART02.
       GRAVO-RENG0.
	   MOVE 0 TO REN-OPE NETO-IVA NO-GRA-IVA EXE-IVA DED-IVA RET-IVA.
	   MOVE 0 TO ART-OPE IMP-1-IVA IMP-2-IVA CRE-DEB-IVA PER-IVA.
	   MOVE 0 TO UNI-OPE.
	   MOVE NETO-CAP TO PRE-OPE NETO-IVA.
	   MOVE EXE-CAP TO EXE-IVA D-R-OPE.
	   MOVE TOT-CAP TO IMP-OPE.
	   MOVE IVA-CAP TO IMP-IMPU-OPE(1) IMP-1-IVA.
	   MOVE IVA-N-CAP TO IMP-IMPU-OPE(2) IMP-2-IVA.
	   MOVE IMP-INT TO IMP-IMPU-OPE(3) NO-GRA-IVA.
	   MOVE 1 TO IVA-IVA.
      * .=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=..=
      *    MOVEMOS A PRETO -1- A ALI-IVA
	   MOVE 1 TO ALI-IVA
      * .=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=..=

       
	   MOVE Y TO TIP-COM-IVA.
	   MOVE SUC-C-CAP TO SUC-C-IVA.
	   MOVE SUB-T-C-CAP TO SUB-T-C-IVA.
	   MOVE MOV-CAP TO COM-IVA.
	   MOVE RUBRO-CTA TO RUBRO-IVA.
	   MOVE CUENTA TO CUE-IVA.
	   MOVE DET-CAP0 TO DET-OPE.
	   MOVE NOMBRE-C TO DET-OPE DESCR-IVA.
	   MOVE IGAN TO CUIT-OPE CUIT-IVA.
	   MOVE INSCRIPTO TO RESP-OPE INS-IVA.
	   IF INSCRIPTO = "C" OR INSCRIPTO = "E"
	      COMPUTE NETO-IVA ROUNDED = NETO-CAP / ( 1 + (
			 IVA-1-CAP / 100 ) )
	      COMPUTE IMP-1-IVA = NETO-CAP - NETO-IVA.
	   COMPUTE CRE-DEB-IVA = IMP-1-IVA + IMP-2-IVA.
	   IF Y = 4
	     COMPUTE NETO-IVA ROUNDED = NETO-IVA * ( 0 - 1 )
	     COMPUTE IMP-1-IVA ROUNDED = IMP-1-IVA * ( 0 - 1 )
	     COMPUTE IMP-2-IVA ROUNDED = IMP-2-IVA * ( 0 - 1 )
	     COMPUTE NO-GRA-IVA ROUNDED = NO-GRA-IVA * ( 0 - 1 )
	     COMPUTE EXE-IVA ROUNDED  = EXE-IVA * ( 0 - 1 )
	     COMPUTE CRE-DEB-IVA ROUNDED = CRE-DEB-IVA * ( 0 - 1 ).
	   MOVE 0 TO IND-OPE.
      *=-=-=-=-=-= NO GRABA OPERACION =-=-=-=-=-=-=-=-=-=
      *     IF Y = 2 OR Y = 7 OR Y = 4 OR Y = 5 
      *        WRITE REG-OPERA INVALID KEY CLOSE OPERA 
      *                                 GO TO CAP-NUME.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
       GRABA-CC.
	   IF Y = 7 OR Y = 1 OR Y = 8 OR Y = 3
	       GO TO GRABA-CC-F.
	   MOVE NUM-EMP TO EMP-MOV.
	   MOVE SUC-EMP TO SUC-EMP-MOV.
	   MOVE RUBRO-CTA TO RUBRO-MOV.
	   MOVE CUENTA TO CUENTA-MOV.
	   MOVE 0 TO SUB-CUENTA-MOV.
	   MOVE AA-CAP TO ANO-MOV.
	   MOVE MM-CAP TO MES-MOV.
	   MOVE DD-CAP TO DIA-MOV.
	   COMPUTE PMOV = PMOV + 1.
	   MOVE PMOV TO MOVIMIENTO-MOV.
	   IF Y = 2
	      MOVE 1 TO TIPO-MOV.
	   IF Y = 5
	      MOVE 1 TO TIPO-MOV.
	   IF Y = 4 
	      MOVE 2 TO TIPO-MOV.
	   MOVE Y TO TIPO-C-MOV.
	   MOVE SUB-T-C-CAP TO SUB-T-C-MOV.
	   MOVE SUC-C-CAP TO SUC-C-MOV.
	   MOVE MOV-CAP TO COMPRO-MOV.
	   MOVE IMP-OPE TO IMPORTE-MOV.
	   IF REF-CAP = SPACES
		    MOVE "SEGUN DETALLE" TO COMENTARIO-MOV
	    ELSE MOVE REF-CAP TO COMENTARIO-MOV.

	   IF TIPO-MOV = 1
	       COMPUTE SALDO = SALDO + IMPORTE-MOV
	       ELSE COMPUTE SALDO = SALDO - IMPORTE-MOV
		    PERFORM AC-VENC THRU AC-VENC-F.
	   IF TIPO-MOV = 2
	     IF SALDO-CAN NOT = 0
	       IF SALDO-CAN > IMPORTE-MOV
		    COMPUTE SALDO-CAN = SALDO-CAN - IMPORTE-MOV
	       ELSE MOVE 0 TO SALDO-CAN
		    MOVE "N" TO ESTADO.
	   OPEN I-O CUENTAS.
	   IF Y = 2 OR Y = 4 OR Y = 5
	     REWRITE REG-CTAS.
	   CLOSE CUENTAS.
	   OPEN I-O MOVI.
	   IF Y = 2 OR Y = 4 OR Y = 5
	      WRITE REG-MOV.
	   CLOSE MOVI.
       GRABA-CC-F.
	   EXIT.
       SIGO-P.
	   IF Y = 7 OR Y = 3 OR Y = 1 OR Y = 8 GO TO SIGO-P-F.
	   OPEN INPUT PENDI.
	   MOVE NUM-EMP TO EMP-PEND.
	   MOVE SUC-EMP TO SUC-EMP-PEND.
	   MOVE RUBRO-CTA TO RUBRO-PEND.
	   MOVE CUENTA TO CUENTA-PEND.
	   MOVE 0 TO SUB-CUENTA-PEND.
	   MOVE 0 TO PENDIENTE-PEND DIA-PEND MES-PEND ANO-PEND.
	   MOVE IMPORTE-MOV TO IMPORTE-INT.
	   START PENDI KEY IS NOT < CLAVE-PEND
		INVALID KEY GO TO SIGO-NUEVO.
       SIGO-P1.
	   READ PENDI NEXT AT END GO TO SIGO-NUEVO.
	   IF EMP-PEND NOT = NUM-EMP GO TO SIGO-NUEVO.
	   IF SUC-EMP-PEND NOT = SUC-EMP GO TO SIGO-NUEVO.
	   IF RUBRO-PEND NOT = RUBRO-CTA GO TO SIGO-NUEVO.
	   IF CUENTA-PEND NOT = CUENTA GO TO SIGO-NUEVO.
      *     IF SUB-CUENTA-PEND NOT = 0 GO TO SIGO-NUEVO.
	   IF D-H-PEND = TIPO-MOV GO TO SIGO-P1.
	   COMPUTE TOTAL-P-CAP = IMPORTE-PEND - ACUENTA-PEND.
	   IF Y = 2 OR Y = 4 OR Y = 5
	    IF TOTAL-P-CAP > IMPORTE-INT
	     COMPUTE ACUENTA-PEND = ACUENTA-PEND + IMPORTE-INT
	     CLOSE PENDI
	     OPEN I-O PENDI
	     REWRITE REG-PEND
	     CLOSE PENDI
	     GO TO SIGO-P-F.
	   IF Y = 2 OR Y = 4 OR Y = 5
	    IF TOTAL-P-CAP < IMPORTE-INT
	     COMPUTE IMPORTE-INT = IMPORTE-INT - TOTAL-P-CAP
	     CLOSE PENDI
	     OPEN I-O PENDI
	     DELETE PENDI
	     CLOSE PENDI
	     OPEN INPUT PENDI
	     GO TO SIGO-P1.
	   CLOSE PENDI.
	   OPEN I-O PENDI.
	   IF Y = 2 OR Y = 4 OR Y = 5
	      DELETE PENDI.
	   CLOSE PENDI.
	   GO TO SIGO-P-F.
       SIGO-NUEVO.
	   MOVE NUM-EMP TO EMP-PEND.
	   MOVE SUC-EMP TO SUC-EMP-PEND.
	   MOVE RUBRO-CTA TO RUBRO-PEND.
	   MOVE CUENTA TO CUENTA-PEND. 
	   MOVE 0 TO SUB-CUENTA-PEND.
	   COMPUTE PPEND = PPEND + 1.
	   OPEN I-O CUENTAS.
	   REWRITE REG-CTAS.
	   CLOSE CUENTAS.
	   MOVE PPEND TO PENDIENTE-PEND.
      *=-=-=-= CON VENCIMIENTO =-=-=-=-=-=-=-=
      *     MOVE DD-V-CAP TO DIA-PEND.
      *     MOVE MM-V-CAP TO MES-PEND.
      *     MOVE AA-V-CAP TO ANO-PEND.
      *=-=-=-== SIN VENCIMIENTO =-=-=-=-=-=-==
	   MOVE DIA-MOV TO DIA-PEND.
	   MOVE MES-MOV TO MES-PEND.
	   MOVE ANO-MOV TO ANO-PEND.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-==
	   MOVE TIPO-MOV TO D-H-PEND.
	   MOVE TIPO-C-MOV TO TIPO-PEND.
	   MOVE SUB-T-C-MOV TO SUB-T-PEND.
	   MOVE SUC-C-MOV TO SUC-T-PEND.
	   MOVE COMPRO-MOV TO COMPRO-PEND.
	   MOVE "SEGUN DETALLE" TO DETA-PEND.
	   MOVE IMPORTE-INT TO IMPORTE-PEND.
	   MOVE 0 TO ACUENTA-PEND.
	   MOVE DIA-MOV TO DIA-EMI-PEND.
	   MOVE MES-MOV TO MES-EMI-PEND.
	   MOVE ANO-MOV TO ANO-EMI-PEND.
	   MOVE PMOV TO REMATE-PEND.
	   CLOSE PENDI.
	   OPEN I-O PENDI.
	   IF Y = 2 OR Y = 4 OR Y = 5
	     WRITE REG-PEND.
	   CLOSE PENDI.
       SIGO-P-F.
	   EXIT.
       
       IMPRE-FACTU.
	   ADD 1 TO CONT-F.
	   IF CONT-S NOT = 0
	      COMPUTE CONT-S = CONT-S - 1.
	   IF CONT-F = 1 MOVE "- ORIGINAL -" TO CANT-I-ED.
	   IF CONT-F = 2 MOVE "- DUPLICADO -" TO CANT-I-ED.
	   IF CONT-F = 3 MOVE "-TRIPLICADO-" TO CANT-I-ED.
	   IF CONT-F = 4 MOVE "CUADRUPLICADO" TO CANT-I-ED.
	   IF CONT-F = 5 MOVE "QUINTUPLICADO" TO CANT-I-ED.
	   MOVE 0 TO CONT-R CONT-I CONT-P.
	   MOVE MOV-CAP TO MOV-ED.
	   IF DET-CAP0 NOT = SPACES
		MOVE DET-CAP0 TO NOMBRE-C
		MOVE SPACES TO DIRE
		MOVE 0 TO COD-LOCA 
		MOVE SPACES TO IGAN TEL.
	   MOVE NOMBRE-C TO NOM-ED DET-OPE NOM1-ED NOM1-ED1.
	   MOVE DIRE TO DOM-ED DOM1-ED DOM1-ED1.
	   MOVE COD-LOCA TO C-POS CPOS-ED CPOS1-ED CPOS1-ED1.
	   OPEN INPUT CPOSTAL.
	   READ CPOSTAL INVALID KEY 
		 MOVE LOC-M-CAP TO NOM-POSTAL PRO-POSTAL.
	   CLOSE CPOSTAL.
	   MOVE NOM-POSTAL TO LOC-ED LOC1-ED LOC1-ED1.
	   MOVE PRO-POSTAL TO PRO-ED.
	   MOVE IGAN TO IGAN-ED CUIT-OPE IGAN1-ED.
	   MOVE TEL TO TEL-ED TEL1-ED.
	   MOVE INSCRIPTO TO RESP-OPE.
	   MOVE RESP-EDI TO RES-ED RES1-ED.
	   MOVE AA-CAP TO AA-ED AA1-ED.
	   MOVE MM-CAP TO MM-ED MM1-ED.
	   MOVE DD-CAP TO DD-ED DD1-ED.
      *=-=-=- CON VENCIMIENTOS =-=-=-=-=-=-=
      *     MOVE AA-V-CAP TO AA1-V-ED.
      *     MOVE MM-V-CAP TO MM1-V-ED.
      *     MOVE DD-V-CAP TO DD1-V-ED.
      *=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=
	   MOVE CANT-ART TO CANT-ART-ED CANT-ART1-ED.
	   MOVE REF-CAP TO REF-ED.
      *=-=-=-= PARA TANO =-=-=-=-=-=-=-=-=-=-=-=
      *     IF Y NOT = 2 OR Y NOT = 9 OR Y NOT = 7
      *=-=-=-=-=- PARA TODOS LOS QUE IMPRIMAN EN PAPEL -=
      *=-=-=-=-== OTROS COMPROBANTES
      *     IF Y = 1 OR Y = 8
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
      * PARA VIOLLAZ
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
      *       IF LAPRIMERA = 0
		MOVE 9 TO LAPRIMERA
		IF Y = 4 OR Y = 5
		      WRITE LIN-IMP02 FROM TIT0-0
		 ELSE WRITE LIN-IMP02 FROM LIN-10.

		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10
		WRITE LIN-IMP02 FROM LIN-10.
	     WRITE LIN-IMP02 FROM TIT1-1
	     WRITE LIN-IMP02 FROM TIT1-2
	     WRITE LIN-IMP02 FROM TIT1-3
	     WRITE LIN-IMP02 FROM TIT1-4
	     WRITE LIN-IMP02 FROM LIN-10 AFTER 3
	     ADD 15 TO CONT-R.
       
       IMPRE-F0.
	   MOVE SPACES TO DET-CAP0.
	   MOVE 0 TO CONT-REP CANT-ART. 
	   MOVE 1 TO V.
       IMPRE-F1.
      *=-=-=-=-= PARA VIOLLAZ =-=-=-=-=-=-=-=-
	   IF Y = 7
	     IF V > 40 GO TO IMPRE-FIN.
	   IF Y NOT = 7
      *=-=-=-=-=-=PARA TODOS=-=-=-=-=-=-=
	     IF V > 20 GO TO IMPRE-FIN.
      **=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	   ADD 1 TO V.
	   ADD 1 TO CONT-R.
	   ADD 1 TO CONT-REP.
	   GO TO IMPRE-F1.
       IMPRE-FIN.
      *=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
       IMPRE-FACTU-F.
	   EXIT.

       IMPRE-REMI.
	   PERFORM ESPA 5 TIMES.
	   MOVE 1 TO CONT-R.
	   MOVE 0 TO V.
       IMPRE-REMI1.
	   MOVE SPACES TO IMP-R1-ED IMP-R2-ED IMP-R3-ED IMP-R4-ED.
	   MOVE SPACES TO IMP-R5-ED.
	   IF NUM-CONDI > 30 AND NUM-CONDI < 50
	      WRITE LIN-IMP02 FROM IMP-500 AFTER 1
	      ELSE WRITE LIN-IMP02 FROM IMP-50 AFTER 1.
	   MOVE COM-REP TO COM-REP-ED1.
	   WRITE LIN-IMP02 FROM IMP-51 AFTER 1.
	   PERFORM MUEVO-VEC THRU MUEVO-VEC-F.
	   WRITE LIN-IMP02 FROM IMP-52 AFTER 1.
	   ADD 1 TO CONT-R.
	   PERFORM MUEVO-VEC THRU MUEVO-VEC-F.
	   WRITE LIN-IMP02 FROM IMP-53 AFTER 1.
	   ADD 1 TO CONT-R.
	   PERFORM MUEVO-VEC THRU MUEVO-VEC-F.
	   WRITE LIN-IMP02 FROM IMP-54 AFTER 1.
	   ADD 1 TO CONT-R.
	   PERFORM MUEVO-VEC THRU MUEVO-VEC-F.
	   WRITE LIN-IMP02 FROM IMP-55 AFTER 1.
	   ADD 1 TO CONT-R.
       IMPRE-REMI2.
	   IF V = 20 GO TO IMPRE-REMI-F.
	   IF V > 20 GO TO IMPRE-REMI-F.
	   PERFORM MUEVO-VEC1 THRU MUEVO-VEC1-F.
	   IF UNI-VEC(V) = 0 GO TO IMPRE-REMI-F.
	   WRITE LIN-IMP02 FROM IMP-56 AFTER 1.
	   ADD 1 TO CONT-R.
	   GO TO IMPRE-REMI2.
       IMPRE-REMI-F.
	   EXIT.
       MUEVO-VEC.
	   ADD 1 TO V.
	   MOVE SPACES TO COMA-R N-ART-R ENV-R COM-R.
	   MOVE 0 TO UNI1-R UNI2-R.
	   IF V > 20 GO TO MUEVO-VEC-F.
	   IF REP-VEC(V) = 0 GO TO MUEVO-VEC.
	   IF UNI-VEC(V) = 0 GO TO MUEVO-VEC.           
	   MOVE UNI-VEC(V) TO CANT-UNI.
	   MOVE UNI-1 TO UNI1-R.
	   IF UNI-2 = 0 MOVE SPACES TO COMA-R
	      ELSE MOVE "," TO COMA-R.
	   MOVE UNI-2 TO UNI2-R.
	   MOVE N-ART-VEC(V) TO N-ART-R.
	   MOVE ENV-VEC(V) TO ENV-R.
	   MOVE SPACES TO COM-R.
	   MOVE DET-VEC(V) TO COM-R.
	   IF CONT-R = 1
	      IF UNI-VEC(V) = 0 MOVE SPACES TO IMP-R1-ED 
	       ELSE MOVE IMP-R TO IMP-R1-ED.
	   IF CONT-R = 2
	      IF UNI-VEC(V) = 0 MOVE SPACES TO IMP-R2-ED 
	       ELSE MOVE IMP-R TO IMP-R2-ED.
	   IF CONT-R = 3 
	      IF UNI-VEC(V) = 0 MOVE SPACES TO IMP-R3-ED
	       ELSE MOVE IMP-R TO IMP-R3-ED.
	   IF CONT-R = 4 
	      IF UNI-VEC(V) = 0 MOVE SPACES TO IMP-R4-ED
	       ELSE MOVE IMP-R TO IMP-R4-ED. 
       MUEVO-VEC-F.
	   EXIT.
       MUEVO-VEC1.
	   MOVE SPACES TO IMP-R5-ED.
	   ADD 1 TO V.
	   MOVE SPACES TO COMA-R N-ART-R ENV-R COM-R.
	   MOVE 0 TO UNI1-R UNI2-R.
	   IF V > 20 GO TO MUEVO-VEC1-F.
	   IF REP-VEC(V) = 0 GO TO MUEVO-VEC1.
	   IF UNI-VEC(V) = 0 MOVE SPACES TO IMP-R5-ED
			     GO TO MUEVO-VEC1-F.
	   MOVE UNI-VEC(V) TO CANT-UNI.
	   MOVE UNI-1 TO UNI1-R.
	   IF UNI-2 = 0 MOVE SPACES TO COMA-R
	      ELSE MOVE "," TO COMA-R.
	   MOVE UNI-2 TO UNI2-R.
	   MOVE N-ART-VEC(V) TO N-ART-R.
	   MOVE ENV-VEC(V) TO ENV-R.
	   MOVE DET-VEC(V) TO COM-R.
	   MOVE IMP-R TO IMP-R5-ED.
       MUEVO-VEC1-F.
	   EXIT.    
